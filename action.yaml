name: 'Bump Version by Labels'
description: 'Automatically bumps version based on PR labels and creates a pull request and tag.'
author: 'conjikidow'

inputs:
  github-token:
    description: 'The GitHub token for authentication.'
    required: false
    default: ${{ github.token }}
  version-of-bump-my-version:
    description: 'The version of `bump-my-version` to use.'
    required: false
    default: 'latest'
  label-major:
    description: 'The label used to trigger a major version bump.'
    required: false
    default: 'major'
  label-minor:
    description: 'The label used to trigger a minor version bump.'
    required: false
    default: 'minor'
  label-patch:
    description: 'The label used to trigger a patch version bump.'
    required: false
    default: 'patch'
  branch-prefix:
    description: 'The prefix for the version bump branch name.'
    required: false
    default: 'workflow'
  labels-to-add:
    description: 'Comma-separated string of labels to add to the PR for version bumping.'
    required: false
    default: ''
  create-release:
    description: 'Whether to create a GitHub Release for the new tag.'
    required: false
    default: 'false'
outputs:
  version-bumped:
    description: "`true` if the version was bumped and a new tag was created; otherwise, `false`."
    value: ${{ steps.create-tag.outputs.version-bumped }}
  new-version:
    description: "The new version number (e.g., `1.2.4`). This is empty when `version-bumped` is `false`."
    value: ${{ steps.create-tag.outputs.new-version }}

runs:
  using: 'composite'
  steps:
    - name: Check if PR is merged
      shell: bash
      run: |
        if [[ -z "${{ github.event.pull_request.merged }}" || "${{ github.event.pull_request.merged }}" != "true" ]]; then
          echo "Skipping job because the pull request is not merged."
          echo "SKIP_JOB=true" >> "$GITHUB_ENV"
        fi

    - name: Checkout repository
      if: env.SKIP_JOB != 'true'
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        token: ${{ inputs.github-token }}

    - name: Configure Git user
      if: env.SKIP_JOB != 'true'
      shell: bash
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Determine bump type
      if: env.SKIP_JOB != 'true'
      id: bump-type
      shell: bash
      run: ${{ github.action_path }}/src/determine-bump-type.sh
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        REPO: ${{ github.repository }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        LABEL_MAJOR: ${{ inputs.label-major }}
        LABEL_MINOR: ${{ inputs.label-minor }}
        LABEL_PATCH: ${{ inputs.label-patch }}

    - name: Install uv
      if: env.SKIP_JOB != 'true' && steps.bump-type.outputs.type != 'none'
      uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3

    - name: Run bump script
      if: env.SKIP_JOB != 'true' && steps.bump-type.outputs.type != 'none'
      shell: bash
      run: ${{ github.action_path }}/src/bump-version.sh
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        VERSION_OF_BUMP_MY_VERSION: ${{ inputs.version-of-bump-my-version }}
        BUMP_TYPE: ${{ steps.bump-type.outputs.type }}
        LABELS_TO_ADD: ${{ inputs.labels-to-add }}
        BRANCH_PREFIX: ${{ inputs.branch-prefix }}

    - name: Create tag
      if: env.SKIP_JOB != 'true'
      id: create-tag
      shell: bash
      run: ${{ github.action_path }}/src/create-tag.sh
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        HEAD_REF: ${{ github.event.pull_request.head.ref }}
        MERGE_COMMIT_SHA: ${{ github.event.pull_request.merge_commit_sha }}
        BRANCH_PREFIX: ${{ inputs.branch-prefix }}

    - name: Create GitHub Release
      if: env.SKIP_JOB != 'true' && inputs.create-release == 'true' && steps.create-tag.outputs.version-bumped == 'true'
      shell: bash
      run: ${{ github.action_path }}/src/create-release.sh
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        NEW_VERSION: ${{ steps.create-tag.outputs.new-version }}
        MERGE_COMMIT_SHA: ${{ github.event.pull_request.merge_commit_sha }}

branding:
  icon: 'chevrons-up'
  color: 'green'
